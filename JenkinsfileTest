pipeline {
    agent any
triggers {
    GenericTrigger(
        causeString: 'Triggered by job # ${Buildid} from ${Buildurl}',
        genericHeaderVariables:[
            [key: 'Returnurl', regexpFilter: ''],
            [key: 'Testurl', regexpFilter: ''],
            [key: 'Buildurl', regexpFilter: ''],
            [key: 'Buildid', regexpFilter: ''],
            [key: 'Buildnumber', regexpFilter: '']
        ],
        printContributedVariables: true,
        printPostContent: true,
        regexpFilterExpression: '',
        regexpFilterText: '',
        tokenCredentialId: 'commtok'
    )
}
    environment {
        PATH = "$PATH:/DEV"

        }
    stages {
        stage('e2e test'){
            steps {
                sh 'echo $PATH'
            }
        }
        stage('Process build') {
            steps {
                echo 'Test'
                script{
                    BUILD_TRIGGER_BY = sh ( script: "BUILD_BY=\$(curl -k --silent ${BUILD_URL}/api/xml | tr '<' '\n' | egrep '^userId>|^userName>' | sed 's/.*>//g' | sed -e '1s/\$/ \\/ /g'); if [[ -z \${BUILD_BY} ]]; then BUILD_BY=\$(curl -k --silent ${BUILD_URL}/api/xml | tr '<' '\n' | grep '^shortDescription>' | sed 's/.*user //g;s/.*by //g'); fi; echo \${BUILD_BY}", returnStdout: true ).trim()
                    echo "BUILD_TRIGGER_BY: ${BUILD_TRIGGER_BY}"
                    //if (BUILD_CAUSE_JSON != null){

                        def quit = httpRequest url:"${returnurl}", httpMode: 'POST'
                    //}else{
                    //    println("Local execution")
                    //}
                }
            }
        }
    }
}
